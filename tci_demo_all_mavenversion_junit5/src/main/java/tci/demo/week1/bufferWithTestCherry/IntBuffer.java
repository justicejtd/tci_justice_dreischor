package tci.demo.week1.bufferWithTestCherry;

/**
 * this is a class for a bounded buffer (=buffer with fixed size).
 */
public class IntBuffer implements IIntBuffer {


    /**
     * create buffer
     *
     * @param size max. amount of items in the buffer.
     * @throws IllegalArgumentException when size < 0;
     * @should return buffer with given size bigger than or equal to zero
     * @should return illegalargumentexception when size is smaller than zero
     */
    public IntBuffer(int size) throws IllegalArgumentException {
    }


    /**
     * put a value in the buffer. Throw an BufferIsFullException when buffer is full
     *
     * @param val
     * @should add 1 item to an empty buffer of size 1
     * @should throw bufferisfull exception when adding to buffer of size zero
     * @should throw bufferisfull exception when adding to a buffer of size X when the number of items in the buffer is X
     */
    @Override
    public void put(int val) throws BufferIsFullException {

    }

    /**
     * @return the sum of values in the buffer
     * @should return 0 when buffer is empty
     * @should return value of added item to a the buffer with size 1 and 1 item
     * @should return sum of values to a buffer of sufficient size
     */
    @Override
    public int getSum() {
        return 0;
    }

    /**
     * shows if buffer is full
     *
     * @return true if buffer is full, otherwise false
     * @should return true when buffer has size zero
     * @should return true when number of items is equal to the size of the buffer
     * @shoudl return false when size of the buffer is bigger than the number of items in it
     *
     */
    @Override
    public boolean bufferIsFull() {
        return false;
    }

    /**
     * @return nr of items put in the buffer
     * @should return the number of added items in the buffer
     *
     */
    @Override
    public int getNrOfItemsInBuffer() {
        return 0;
    }

    /**
     * buffersize
     *
     * @return size of the buffer.
     * @should return the size of the buffer which was given during creation
     */
    @Override
    public int getBufferSize() {
        return 0;
    }


    /******************************************************
     *
     *   GETTERS/SETTERS CODE IS GENERATED BY INTELLIJ,
     *   AND UNTOUCHED BY PEOPLE.
     *   THE BEHAVIOUR OF THIS CODE DOES NOT HAVE TO BE TESTED.
     *
     ********************************************************/


}
