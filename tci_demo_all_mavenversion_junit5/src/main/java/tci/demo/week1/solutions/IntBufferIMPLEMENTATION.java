package tci.demo.week1.solutions;

import tci.demo.week1.buffer.BufferIsFullException;

/**
 * this is a class for a bounded buffer (=buffer with fixed size).
 *
 *
 */
public class IntBufferIMPLEMENTATION {
    private int[] internalCollection;
    private int emptyLocation = 0;

    /**
     * create buffer
     * @param size max. amount of items in the buffer.
     * @throws IllegalArgumentException when size < 0;
     */
    public IntBufferIMPLEMENTATION(int size) throws IllegalArgumentException {
        if(size <=0){
            throw new IllegalArgumentException("number cannot be negative");
        }
        this.internalCollection = new int[size];
    }

    /**
     * put a value in the buffer. Throw an BufferIsFullException when buffer is full
     *
     * @param val
     */

    public void put(int val) throws BufferIsFullException {
        if (bufferIsFull()) {
            throw new BufferIsFullException("buffer is full while putting in an element");
        }
        this.internalCollection[emptyLocation++] = val;
    }

    /**
     * @return the sum of values in the buffer
     */
    public int getSum() {
        int totalAmount = 0;
        for (int amount : this.internalCollection)
        {
            totalAmount += amount;
        }
        return totalAmount;
    }

    /**
     * shows if buffer is full
     *
     * @return true if buffer is full, otherwise false
     */
    public boolean bufferIsFull() {
        return (emptyLocation == this.internalCollection.length);
    }

    /**
     * @return nr of items put in the buffer
     */

    public int getNrOfItemsInBuffer() {
        return this.emptyLocation;
    }


    /**
     * buffersize
     * @return size of the buffer.
     */
    public int getBufferSize(){
        return this.internalCollection.length;
    }


    /******************************************************
     *
     *   GETTERS/SETTERS CODE IS GENERATED BY INTELLIJ,
     *   AND UNTOUCHED BY PEOPLE.
     *   THE BEHAVIOUR OF THIS CODE DOES NOT HAVE TO BE TESTED.
     *
     ********************************************************/


}
