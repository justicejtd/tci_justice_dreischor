package tci.demo.week1.schoolassignment;

import java.util.Locale;

/**
 * A Course is an IMMUTABLE object with a given name, code and ec.
 * It's uniquely identified by it's course code (a string).
 * the name of the course (a string) should not be null
 * the code of the course should not be null
 * code should be 3 or 4 characters long and is in upper case
 * the number of EC's (ec) is a positive whole number.
 * If above parametes are wrong, an IllegalArgumentException should be thrown during construction.
 */
public class Course {
    private final String name;
    private final String code;
    private final int ec;

    // TODO: create code which complies with the specification above,
    // and uses the method calls below (add methods if you think they
    // are necessary (they are!).
    public Course(String name, String code, int ec) throws IllegalArgumentException {
        if (name == null) {
            throw new IllegalArgumentException("Course name can not be null");
        } else if (code == null) {
            throw new IllegalArgumentException("Course code can not be null");
        } else if (ec < 0) {
            throw new IllegalArgumentException("EC should be positive whole number");
        } else if (code.length() < 3 || code.length() > 4) {
            throw new IllegalArgumentException("Code should be 3 or 4 characters long");
        } else if (!code.toUpperCase().equals(code)) {
            throw new IllegalArgumentException("Code should be 3 or 4 characters long");
        }

//        else {
//            char[] charArray = code.toCharArray();
//            for (int i = 0; i < code.length(); i++) {
//                if (!Character.isUpperCase(charArray[i])) {
//                    throw new IllegalArgumentException("code should be all in upper case");
//                }
//            }
//        }

        this.name = name;
        this.code = code;
        this.ec = ec;

    }

    /******************************************************
     *
     *   GETTERS/SETTERS CODE CAN BE GENERATED BY INTELLIJ,
     *   AND UNTOUCHED BY PEOPLE.
     *   THE BEHAVIOUR OF THIS CODE DOES NOT HAVE TO BE TESTED.
     *
     ********************************************************/

    public String getName() {
        return name;
    }


    public String getCode() {
        return code;
    }

    public int getEc() {
        return ec;
    }
}

/*
 *
 * Note: An IMMUTABLE object is mostly used for transfering data between layers in your software
 * , so it only has a constructor which sets ALL attributes, and it has getters (generated by the IDE)
 * for all of the attributes.
 * (this is a so called DTO: Data Transfer Object)
 *
 *
 */

